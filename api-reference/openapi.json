{
  "openapi": "3.1.0",
  "info": {
    "title": "Aiminis POS API (Full Version)",
    "version": "1.0.0",
    "description": "Full OpenAPI specification for Aiminis POS system, converted from Postman Collection.\nIncludes Auth, Users, Products, Flash Sales, Loyalty, Promotions, Booking, Affiliate, Games, Insurance, and more."
  },
  "servers": [
    {
      "url": "https://upload.aimini.vn",
      "description": "Production API server (Aiminis POS)"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [{ "bearerAuth": [] }],
  "paths": {
    "/api/v1/auth/login": {
      "post": {
        "summary": "Login POS",
        "description": "Authenticate POS user and return JWT token.",
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string", "example": "user@example.com" },
                  "password": { "type": "string", "example": "12345678" }
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "token": "JWT_TOKEN_EXAMPLE",
                    "user": { "id": 1, "name": "Admin", "role": "manager" }
                  }
                }
              }
            }
          },
          "401": { "description": "Invalid credentials" }
        }
      }
    },   
    "/api/v1/custom-collection": {
      "get": {
        "tags": ["Custom Collection"],
        "summary": "[GET] Custom collections",
        "description": "Retrieve all custom collections created by the user, including nested parent-child hierarchy if applicable.",
        "responses": {
          "200": {
            "description": "List of custom collections",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "8qA9dVqo",
                      "name": "Danh mục chính",
                      "slug": "danh-muc-chinh",
                      "parent_id": null,
                      "children": [
                        {
                          "id": "7bv3gPWj",
                          "name": "Danh mục con",
                          "slug": "danh-muc-con"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Custom Collection"],
        "summary": "[POST] Create custom collection",
        "description": "Create a new custom collection. You can optionally link it to a parent collection or attach products in the same request.",
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string", "example": "Danh mục 2" },
                  "slug": { "type": "string", "example": "danh-muc-2" },
                  "image": { "type": "string", "example": "example.jpg" },
                  "banner_image": { "type": "string", "example": "banner.jpg" },
                  "parent_id": {
                    "type": "string",
                    "example": "7bv3gPWj",
                    "description": "Optional. Use this to assign a parent collection."
                  },
                  "products[0]": {
                    "type": "string",
                    "example": "PROD_12345",
                    "description": "Optional. Add one or more products to this collection."
                  }
                },
                "required": ["name", "slug"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Custom collection created successfully",
            "content": {
              "application/json": {
                "example": {
                  "message": "Collection created",
                  "data": {
                    "id": "8qA9dVqo",
                    "name": "Danh mục 2",
                    "slug": "danh-muc-2",
                    "parent_id": "7bv3gPWj",
                    "products": ["PROD_12345"]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/custom-collection/{id}": {
      "put": {
        "tags": ["Custom Collection"],
        "summary": "[PUT] Update custom collection",
        "description": "Update an existing custom collection. You can rename, reassign parent, or modify images and attached products.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" },
            "example": "8qA9dVqo"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string", "example": "Danh mục đã chỉnh sửa" },
                  "slug": { "type": "string", "example": "danh-muc-2" },
                  "image": { "type": "string", "example": "new-image.jpg" },
                  "banner_image": { "type": "string", "example": "new-banner.jpg" },
                  "parent_id": {
                    "type": "string",
                    "example": "7bv3gPWj",
                    "description": "Optional. Assign to a new parent collection."
                  },
                  "products[0]": {
                    "type": "string",
                    "example": "PROD_002",
                    "description": "Optional. Replace or update attached products."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Custom collection updated successfully",
            "content": {
              "application/json": {
                "example": {
                  "message": "Collection updated",
                  "data": {
                    "id": "8qA9dVqo",
                    "name": "Danh mục đã chỉnh sửa",
                    "slug": "danh-muc-2",
                    "parent_id": "7bv3gPWj"
                  }
                }
              }
            }
          },
          "404": { "description": "Collection not found" }
        }
      },
      "delete": {
        "tags": ["Custom Collection"],
        "summary": "[DELETE] Custom collection",
        "description": "Delete a custom collection by ID. All sub-collections or related products remain unchanged unless handled separately.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" },
            "example": "8qA9dVqo"
          }
        ],
        "responses": {
          "200": {
            "description": "Collection deleted successfully",
            "content": {
              "application/json": {
                "example": {
                  "message": "Collection deleted",
                  "id": "8qA9dVqo"
                }
              }
            }
          },
          "404": { "description": "Collection not found" }
        }
      }
  }
}
