{
  "openapi": "3.1.0",
  "info": {
    "title": "Aiminis POS API (Full Version)",
    "version": "1.0.0",
    "description": "Full OpenAPI specification for Aiminis POS system, converted from Postman Collection.\nIncludes Auth, Users, Products, Flash Sales, Loyalty, Promotions, Booking, Affiliate, Games, Insurance, and more."
  },
  "servers": [
    {
      "url": "https://upload.aimini.vn",
      "description": "Production API server (Aiminis POS)"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [{ "bearerAuth": [] }],
  "paths": {
    "/api/v1/auth/login": {
      "post": {
        "summary": "Login POS",
        "description": "Authenticate POS user and return JWT token.",
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string", "example": "user@example.com" },
                  "password": { "type": "string", "example": "12345678" }
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "token": "JWT_TOKEN_EXAMPLE",
                    "user": { "id": 1, "name": "Admin", "role": "manager" }
                  }
                }
              }
            }
          },
          "401": { "description": "Invalid credentials" }
        }
      }
    },   
    "/api/v1/custom-collection": {
  "get": {
    "summary": "Get all custom collections",
    "description": "Retrieve all custom product collections created by the user.",
    "security": [{ "bearerAuth": [] }],
    "responses": {
      "200": {
        "description": "List of collections",
        "content": {
          "application/json": {
            "example": {
              "data": [
                { "id": 1, "title": "Featured Products", "slug": "featured-products" }
              ]
            }
          }
        }
      }
    }
  },
  "post": {
    "summary": "Create or manage custom collections",
    "description": "Add a new custom product collection. You can include optional fields to link it to a parent collection or attach products.",
    "security": [{ "bearerAuth": [] }],
    "requestBody": {
      "required": true,
      "content": {
        "application/x-www-form-urlencoded": {
          "schema": {
            "type": "object",
            "properties": {
              "name": { "type": "string", "example": "Danh mục 2" },
              "slug": { "type": "string", "example": "danh-muc-2" },
              "image": {
                "type": "string",
                "example": "440cef314f679adba15d7047c47c3661_269a5b4479.jpg"
              },
              "banner_image": {
                "type": "string",
                "example": "440cef314f679adba15d7047c47c3661_269a5b4479.jpg"
              },
              "parent_id": {
                "type": "string",
                "description": "Optional — specify if this collection belongs to another parent collection.",
                "example": "7bv3gPWj"
              },
              "products[0]": {
                "type": "string",
                "description": "Optional — attach product IDs to this collection.",
                "example": "PROD_12345"
              }
            },
            "required": ["name", "slug"]
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "Collection created or updated successfully",
        "content": {
          "application/json": {
            "example": {
              "message": "Custom collection created successfully",
              "data": {
                "id": "8qA9dVqo",
                "name": "Danh mục 2",
                "slug": "danh-muc-2",
                "parent_id": "7bv3gPWj"
              }
            }
          }
        }
      },
      "400": { "description": "Invalid input data" }
    }
  }
},
    "/api/v1/custom-collection/{id}": {
  "put": {
    "summary": "Update custom collection",
    "description": "Update existing collection. Can include optional parent_id to assign it to another collection.",
    "security": [{ "bearerAuth": [] }],
    "parameters": [
      {
        "name": "id",
        "in": "path",
        "required": true,
        "schema": { "type": "string" },
        "example": "8qA9dVqo"
      }
    ],
    "requestBody": {
      "required": true,
      "content": {
        "application/x-www-form-urlencoded": {
          "schema": {
            "type": "object",
            "properties": {
              "name": { "type": "string", "example": "Danh mục 2" },
              "slug": { "type": "string", "example": "danh-muc-2" },
              "banner_image": { "type": "string" },
              "image": { "type": "string" },
              "parent_id": {
                "type": "string",
                "description": "Optional parent collection id",
                "example": "7bv3gPWj"
              }
            }
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "Custom collection updated successfully"
      },
      "404": { "description": "Collection not found" }
    }
  },
  "delete": {
    "summary": "Delete custom collection",
    "description": "Remove an existing custom collection by ID.",
    "security": [{ "bearerAuth": [] }],
    "parameters": [
      {
        "name": "id",
        "in": "path",
        "required": true,
        "schema": { "type": "string" },
        "example": "8qA9dVqo"
      }
    ],
    "responses": {
      "200": { "description": "Collection deleted successfully" },
      "404": { "description": "Collection not found" }
    }
  }
}
  }
}
